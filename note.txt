一、java语言
1、容器
Collection <- List,Set
List <- ArrayList,LinkedList,Vector
Set <- HashSet,TreeSet
Map <- HashMap,HashTable,TreeMap

2、异常
Throwable <- Error (进程退出，OOM，NoClassDefFoundError等),Exception(runtime ,非runtime)

3、I/O

4、并发

二、JVM
1、类加载
2、内存
3、GC

三、linux


四、mysql
4.1 事务
a、在 MySQL 中只有使用了 Innodb 数据库引擎的数据库或表才支持事务。
b、事务处理可以用来维护数据库的完整性，保证成批的 SQL 语句要么全部执行，要么全部不执行。
c、事务用来管理 insert,update,delete 语句
d、事务是必须满足4个条件（ACID）：原子性（Atomicity，或称不可分割性）、一致性（Consistency）、隔离性（Isolation，又称独立性）、持久性（Durability）
①原子性（Atomicity，或称不可分割性）：一个事务（transaction）中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。
②一致性（Consistency）：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设规则，这包含资料的精确度、串联性以及后续数据库可以自发性地完成预定的工作。
③隔离性（Isolation，又称独立性）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。
   事务隔离分为不同级别，包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）。
④持久性（Durability）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。
e、事务隔离要解决的问题：
  ①脏读（A事务读取B事务未提交的数据）、②不可重复读（A事务读取了B事务已提交的同一数据对象）、③幻读（A事务读取了B事务已提交的不同数据对象）
f、事务隔离级别：
  隔离程度越强，事务的执行效率越低。
  ① Serializable（串行化）：读写加锁，事务按提交顺序串行执行，可解决脏读、不可重复读、幻读问题。
  ② Repeatable read（可重复读，默认级别）：在A事务中多次读取同一行的数据只会返回第一次查询的快照，即使B事务对该行数据做了更新修改。
  但如果A事务在读取某个范围内的记录时，B事务又在该范围内插入了新的记录行，当之前的事务再次读取该范围的记录时，会产生幻行，这就是幻读。
  可避免脏读、不可重复读的发生。但是可能会出现幻读。
  ③ Read committed (读已提交)：保证一个事物提交后才能被另外一个事务读取。
  可避免脏读的发生，但是可能会造成不可重复读。
  大多数数据库的默认级别就是 Read committed，比如 Sql Server , Oracle。
  ④ Read uncommitted (读未提交)：最低的事务隔离级别，一个事务还没提交时，它做的变更就能被别的事务看到。

4.2 索引
a、类型 ： 普通索引 唯一索引（允许空值） 主键索引（不允许空值） 大文本索引  组合索引
任何情况都无法保证
五、数据结构


六、算法


七、设计模式


八、spring


九、中间件

十、网络

十一、分布式

十二、高并发

十三、性能调优

